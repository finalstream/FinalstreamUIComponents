<UserControl x:Class="FinalstreamUIComponents.Views.InputFormContent"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:viewModels="clr-namespace:FinalstreamUIComponents.ViewModels"
             xmlns:converters="clr-namespace:FinalstreamUIComponents.Converters"
             xmlns:behaviors="http://schemas.livet-mvvm.net/2011/wpf"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             mc:Ignorable="d"
             d:DataContext="{d:DesignInstance viewModels:InputFormContentViewModel}"
             d:DesignHeight="300" d:DesignWidth="300">
    
    <i:Interaction.Triggers>
        <!--WindowのContentRenderedイベントのタイミングでViewModelのInitializeメソッドが呼ばれます-->
        <i:EventTrigger EventName="LayoutUpdated">
            <behaviors:LivetCallMethodAction MethodTarget="{Binding}" MethodName="Initialize"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <UserControl.Resources>
        <converters:StringIsNullOrEmptyToVisibilityConverter x:Key="StringIsNullOrEmptyToVisibilityConverter" />
        <converters:EnumToVisibilityConverter x:Key="EnumToVisibilityConverter"></converters:EnumToVisibilityConverter>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="19*"/>
            <RowDefinition Height="281*"/>
        </Grid.RowDefinitions>
        <StackPanel MinWidth="200" Grid.RowSpan="2">
            <TextBlock Text="{Binding Message}" Visibility="{Binding Message, Converter={StaticResource StringIsNullOrEmptyToVisibilityConverter}}"  Margin="0,0,0,20" />
            <ItemsControl ItemsSource="{Binding InputParamDictionary}">
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <StackPanel Orientation="Horizontal" Margin="0,0,0,10">
                            <TextBlock Text="{Binding Value.Title, Mode=OneWay}" Width="{Binding Path=DataContext.TitleWidth, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" Margin="0,0,10,0">:</TextBlock>
                            <TextBox Text="{Binding Value.Value}" MinWidth="{Binding Path=DataContext.ValueMinWidth, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" MaxWidth="{Binding Path=DataContext.ValueMaxWidth, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"  Visibility="{Binding Value.InputType, Converter={StaticResource EnumToVisibilityConverter}, ConverterParameter='String'}"></TextBox>
                            <TextBox IsReadOnly="True" Text="{Binding Value.Value}" MinWidth="{Binding Path=DataContext.ValueMinWidth, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" MaxWidth="{Binding Path=DataContext.ValueMaxWidth, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" TextWrapping="Wrap"  Visibility="{Binding Value.InputType, Converter={StaticResource EnumToVisibilityConverter}, ConverterParameter='ReadOnly'}"></TextBox>
                            <ComboBox MinWidth="{Binding Path=DataContext.ValueMinWidth, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" MaxWidth="{Binding Path=DataContext.ValueMaxWidth, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" IsEditable="True" ItemsSource="{Binding Value.Values}" Text="{Binding Value.Value}" Visibility="{Binding Value.InputType, Converter={StaticResource EnumToVisibilityConverter}, ConverterParameter='Select'}"></ComboBox>
                            <ListBox MaxHeight="{Binding Path=DataContext.ValueMaxHeight, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" MinWidth="{Binding Path=DataContext.ValueMinWidth, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" MaxWidth="{Binding Path=DataContext.ValueMaxWidth, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" ItemsSource="{Binding Value.Values}" Visibility="{Binding Value.InputType, Converter={StaticResource EnumToVisibilityConverter}, ConverterParameter='List'}"></ListBox>
                        </StackPanel>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </StackPanel>
    </Grid>
</UserControl>
